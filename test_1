def get_model_info(yaml_data, allowed_model_list):
    model_info_map = {}
    for family_name, family_data in yaml_data.get('model_family', {}).items():
        for version_name, version_data in family_data.items():
            for variant_name, variant_data in version_data.items():
                aihpc_name = variant_data.get('aihpc_name')
                if aihpc_name in allowed_model_list:
                    # Store entire variant_data for that model
                    model_info_map[aihpc_name] = {
                        "family": family_name,
                        "version": version_name,
                        "variant": variant_name,
                        "unique_name": variant_data.get('unique_name'),
                        "aihpc_name": variant_data.get('aihpc_name'),
                        "support_frame": variant_data.get('support_frame'),
                        "inference_types": variant_data.get('inference_types')
                    }
    return model_info_map

allowed_model = []

pattern = r'allowed_models\s*:=\s*\[(.*?)\]'
match = re.search(pattern, policy_content)

if match:
    models_str = match.group(1)
    allowed_model_list = [m.strip().strip('"').strip("'") 
                          for m in models_str.split(",") if m.strip()]

    # Get full model info
    model_info_map = get_model_info(model_catalog, allowed_model_list)

    # Build allowed_model list with all details
    allowed_model = [
        {
            "model": model_name,
            **model_info_map.get(model_name, {})
        }
        for model_name in allowed_model_list
    ]

    # Optional debug
    print("✅ allowed_model with all details:", allowed_model)

else:
    print("❌ No allowed_models found in policy_content")
