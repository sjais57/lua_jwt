def get_model_info(model_catalog, allowed_model_list=None):
    model_info_map = {}
    for model_type in model_catalog.get("model_type", []):
        model_type_name = model_type.get("name", "")
        for family in model_type.get("model_family", []):
            family_name = family.get("name", "")
            for collection in family.get("model_collection", []):
                collection_name = collection.get("name", "")
                for variant in collection.get("variants", []):
                    variant_name = variant.get("name", "")
                    for config in variant.get("configs", []):
                        unique_model_name = config.get("unique_model_name", "")
                        if allowed_model_list and unique_model_name not in allowed_model_list:
                            continue
                        framework_entry = {
                            "supported_framework": config.get("supported_framework", ""),
                            "tasks": str(config.get("tasks", "")) if config.get("tasks") is not None else "",
                            "script_name": config.get("script_name", ""),
                            "hpc_model_name": config.get("hpc_model_name", "")
                        }
                        if unique_model_name not in model_info_map:
                            model_info_map[unique_model_name] = {
                                "model_name": unique_model_name,
                                "model_type": model_type_name,
                                "family": family_name,
                                "collection": collection_name,
                                "variant": variant_name,
                                "frameworks": []
                            }
                        model_info_map[unique_model_name]["frameworks"].append(framework_entry)
    return model_info_map
=============================================================================================================

def get_model_info(yaml_data):
    """
    Flattens the YAML model catalog into a list of model entries.
    """
    model_info_list = []
    for model_type in yaml_data.get('model_type', []):
        model_type_name = model_type.get('name', '')
        for family in model_type.get('model_family', []):
            family_name = family.get('name', '')
            for collection in family.get('model_collection', []):
                collection_name = collection.get('name', '')
                for variant in collection.get('variants', []):
                    variant_name = variant.get('name', '')
                    for config in variant.get('configs', []):
                        unique_model_name = config.get('unique_model_name', '')
                        hpc_model_name = config.get('hpc_model_name', '')
                        support_frame = [config.get('supported_framework')] if config.get('supported_framework') else []
                        model_info_list.append({
                            "model_type": model_type_name,
                            "family": family_name,
                            "collection": collection_name,
                            "variant": variant_name,
                            "unique_name": unique_model_name,
                            "aihpc_name": hpc_model_name,
                            "hpc_model_name": hpc_model_name,
                            "support_frame": support_frame,
                            "model_category": config.get('model_category', ''),
                            "script_name": config.get('script_name', ''),
                            "tasks": config.get('tasks', ''),
                            "base_model_name": config.get('base_model_name', ''),
                        })
    return model_info_list
