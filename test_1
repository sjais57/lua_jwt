@app.post("/evaluate", response_model=PolicyEvaluationResponse)
async def evaluate_policy(
    request: PolicyEvaluationRequest,
    policy_path: str = Depends(authenticate_client)
):
    """Evaluate input data against a specified Rego policy with client authentication via headers"""
    
    # Load YAML + extract allowed models
    yaml_data = load_model_catalog()  # You can make the path configurable if needed
    allowed_models = extract_allowed_models(yaml_data)
    
    # Inject allowed models into input_data
    input_data = request.input_data.copy()
    input_data["allowed_models"] = allowed_models
    
    # Write input file
    input_file = "temp_input.json"
    with open(input_file, "w") as f:
        json.dump(input_data, f)
    
    # (rest of your subprocess logic unchanged)
